package io.playlistify.api.Authorization;

import io.github.cdimascio.dotenv.Dotenv;

import io.playlistify.api.GenerateRandomString;
import se.michaelthelin.spotify.SpotifyApi;
import se.michaelthelin.spotify.SpotifyHttpManager;

import java.net.URI;

public final class AuthSpotifyApi {
    public static Dotenv dotenv = Dotenv.load();

    /**
     * The client id of the {@link AuthSpotifyApi#spotifyApi}.
     */
    private static final String spotifyClientId = dotenv.get("spotify.client.id");

    /**
     * The secret id of the {@link AuthSpotifyApi#spotifyApi}.
     */
    private static final String spotifySecretId = dotenv.get("spotify.client.secret");

    /**
     * The redirect {@link URI} of the {@link AuthSpotifyApi#spotifyApi}.
     */
    private static final URI redirectUri = SpotifyHttpManager.makeUri("http://localhost:8080/callback");

    /**
     * The state of the {@link AuthSpotifyApi#spotifyApi}.
     * Generated by {@link GenerateRandomString#generateString}.
     */
    private final String state = GenerateRandomString.generateString(generatedStringLength);;

    /**
     * The length of the {@link GenerateRandomString#generateString}.
     */
    private static final int generatedStringLength = 35;

    /**
     * The generated {@link SpotifyApi} object.
     */
    private static final SpotifyApi spotifyApi = generateSpotifyApi();

    /**
     * Generates a SpotifyApi object with the client id, client secret, and redirect uri.
     *
     * @return {@link SpotifyApi} object with the {@link #spotifyClientId}, {@link #spotifySecretId}, and {@link #redirectUri}.
     */
    public static SpotifyApi generateSpotifyApi() {
        SpotifyApi spotifyApi = new SpotifyApi.Builder()
                .setClientId(spotifyClientId)
                .setClientSecret(spotifySecretId)
                .setRedirectUri(redirectUri)
                .build();

        return spotifyApi;
    }

    /**
     * Gets the {@link SpotifyApi} object.
     *
     * @return The {@link SpotifyApi} object.
     */
    public static SpotifyApi getSpotifyApi() {
        return spotifyApi;
    }

    /**
     * Gets the client id for the Spotify application.
     *
     * @return The Client Id of the {@link SpotifyApi} object.
     */
    public static String getSpotifyClientId() {
        return spotifyClientId;
    }

    /**
     * Gets the client secret for the Spotify application.
     *
     * @return The Client Secret of the {@link SpotifyApi} object.
     */
    public static String getSpotifySecretId() {
        return spotifySecretId;
    }
}
