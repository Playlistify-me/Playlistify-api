plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.3'
	id 'io.spring.dependency-management' version '1.1.3'
	id "org.flywaydb.flyway" version "10.0.0"
	id "org.sonarqube" version "4.4.1.3373"
	id "jacoco"
}

group = 'io.playlistify'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

sonar {
	properties {
		property "sonar.projectKey", "Playlistify-me_Playlistify-api"
		property "sonar.organization", "playlistify-me"
		property "sonar.host.url", "https://sonarcloud.io"
	}
}

test {
	jacoco {
		destinationFile = layout.buildDirectory.file('jacoco/jacocoTest.exec').get().asFile
		classDumpDir = layout.buildDirectory.dir('jacoco/classpathdumps').get().asFile
	}
}

jacocoTestReport {
	dependsOn test // tests are required to run before generating the report
}

jacoco {
	toolVersion = "0.8.9"
	reportsDirectory.dir("${buildDir}/jacoco")
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	//spring deps
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	//orm
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'com.mysql:mysql-connector-j'

	//db migrations
	// https://mvnrepository.com/artifact/org.flywaydb/flyway-core
	implementation 'org.flywaydb:flyway-core:9.22.3'
	// https://mvnrepository.com/artifact/org.flywaydb/flyway-mysql
	implementation 'org.flywaydb:flyway-mysql:9.22.3'


	//spotify api
	implementation 'se.michaelthelin.spotify:spotify-web-api-java:8.2.0'

	//dotenv
	implementation 'io.github.cdimascio:dotenv-java:3.0.0'

	//lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.named("sonarqube") {
	dependsOn("test")
}

test.finalizedBy("jacocoTestReport");
